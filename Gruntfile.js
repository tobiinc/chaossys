'use strict';var sys = {    host: 'localhost',    port: 8889,    liveReload: 9999,    path: {        app: '/app',        dist: '/dist'    }};module.exports = function (grunt) {    require('load-grunt-tasks')(grunt);    grunt.initConfig({        watch: {            // application files            html: {                files: ['app/**/*.html'],                options: {                    livereload: sys.liveReload                }            },            js: {                files: ['app/**/*.js'],                //tasks: ['jshint'],                options: {                    livereload: sys.liveReload                }            },            sass: {                files: ['app/static/sass/**/*.scss'],                tasks: ['clean', 'sass'],                options: {                    livereload: sys.liveReload                }            },            css: {                files: ['app/**/*.css'],                options: {                    livereload: sys.liveReload                }            }            // tests            //jsTest: {            //    files: ['test/**/*.js'],            //    tasks: ['jshint']            //},            //            //gruntfile: {            //    files: ['Gruntfile.js'],            //    tasks: ['jshint']            //}        },        connect: {            rules: [{                from: '^(.(?!\\.(css|html|jpg|js|png|eot|otf|svg|ttf|woff|woff2)))*$',                to: '/index.html'            }],            options: {                port: sys.port,                hostname: sys.host,            },            app: {                options: {                    open: true,                    livereload: sys.liveReload,                    base: ['.tmp', 'app']                }            },            dist: {                options: {                    open: true,                    keepalive: true,                    base: 'dist'                }            }        },        clean: {            dist: {                files: [                    {                        dot: true,                        src: [                            '.tmp',                            'app/static/css/**/*',                            'dist/*',                            '!dist/.git*'                        ]                    }                ]            }        },        copy: {            html: {                files: [                    {                        expand: true,                        dot: true,                        cwd: 'app',                        dest: 'dist',                        src: ['index.html']                    }                ]            }        },        usemin: {            html: ['dist/index.html'],            options: {                assetsDirs: ['dist']            }        },        useminPrepare: {            html: 'dist/index.html',            options: {                dest: 'dist'            }        },        rev: {            options: {                encoding: 'utf8',                algorithm: 'md5',                length: 4            },            dist: {                files: {                    src: [                        'dist/static/js/**/*.js',                        'dist/static/css/base.min.css'                    ]                }            }        },        htmlmin: {            dist: {                options: {                    collapseWhitespace: true,                    collapseBooleanAttributes: true,                    removeCommentsFromCDATA: true,                    removeOptionalTags: true                },                files: [                    {                        expand: true,                        cwd: 'dist',                        src: ['**/*.html'],                        dest: 'dist'                    }                ]            }        },        sass: {            dist: {                options: {                    style: 'expanded',                    debugInfo: false,                    sourcemap: false                },                files: {                    'app/static/css/base.css': 'app/static/sass/base.scss'                }            }        },        cssmin: {            target: {                files: [{                    expand: true,                    cwd: 'app/static/css',                    src: ['base.css'],                    dest: 'dist/static/css',                    ext: '.min.css'                }]            }        },        jshint: {            options: {                jshintrc: true            },            all: [                'Gruntfile.js',                'app/static/js/**/*.js'            ]        },        uglify: {            app: {                files: {                    'dist/static/js/scripts.min.js': ['app/static/js/**/*.js']                }            }        },        karma: {            options: {                configFile: 'test/karma.conf.js'            },            app: {                autoWatch: false,                browsers: ['PhantomJS'],                singleRun: true            }        }    });    grunt.registerTask('default', [        'clean',        //'jshint',        'sass',        'useminPrepare',        'copy:html',        'uglify',        'cssmin',        'rev',        'usemin',        'htmlmin'    ]);    grunt.registerTask('dev', [        'clean',        'sass',        'uglify',        'cssmin',        'rev',        'usemin',        'htmlmin',        'connect:app',        'watch'    ]);};